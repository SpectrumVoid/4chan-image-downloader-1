// ==UserScript==
// @name       4chan Thread Downloader
// @namespace  4chan.thread.downloader
// @version    3
// @description  You need a server for this userscript. Downloads every image/webm in a 4chan thread.
// @match      *://boards.4chan.org/*
// @include    *://boards.4chan.org/*
// @copyright  Please see LICENSE.md for the license in use.
// @author     Dongmaster
// ==/UserScript==

// Change this so it points to the harvest.php file.
var php_script = "http://localhost/4chan/harvest.php";

// Function for sending the JSON encoded array with links to the images.
function send_data() {
	var xmlhttp;

	if(window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
		xmlhttp = new XMLHttpRequest();
	} else {// code for IE6, IE5
		xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
	}

    // Node list of every thumbnail (the href attribute points to the actual image).
    var images = document.getElementsByClassName('fileThumb');
    
    
    /*
	xmlhttp.onreadystatechange=function() {
		if(xmlhttp.readyState==4 && xmlhttp.status==200) {
			
		}
	}
    */
    
    // Will hold all of the links to the images.
    var array = [];
    // Pushes every image link into the array named array.
    for(var i = 0; i < images.length; i++) {
        array.push(images[i].getAttribute('href'));
    }
    // Encodes the array into JSON.
    array = JSON.stringify(array);
    
    // Sends the array via GET to the server
    xmlhttp.open("GET", php_script+"?images="+array+"&board="+document.URL, false);
    xmlhttp.send();
}

// Sends images that were specified by the user.
function send_data_post() {
    var xmlhttp;
    
    if(window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
		xmlhttp = new XMLHttpRequest();
	} else {// code for IE6, IE5
		xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
	}
    

    // Will store the specified images in this array
    var checked_posts = [];
    // Node list of every checkbox created by the script
    var checkboxes = document.getElementsByClassName('script_checkbox');
    
    // Goes through every checkbox to see if a checkbox is ticked. If it is ticked, the link to the specified image will be added to the checked_posts array
    for(var i = 0; i < checkboxes.length; i++) {
        if(checkboxes[i].checked === true) {
            checked_posts.push(checkboxes[i].parentNode.parentNode.getElementsByClassName('file')[0].getElementsByClassName('fileThumb')[0].getAttribute('href'));
        }
    }
    
    // Encodes the checked_posts array into JSON
	checked_posts = JSON.stringify(checked_posts); 
    
    /*
	xmlhttp.onreadystatechange=function() {
		if(xmlhttp.readyState==4 && xmlhttp.status==200) {
			//document.getElementById("txtHint").innerHTML=xmlhttp.responseText;
			
		}
	}
    */
    
    // Sends the checked_posts array via GET to the server
    xmlhttp.open("GET", php_script + "?images=" + checked_posts + "&board=" + document.URL, false);
    xmlhttp.send();
}

// Gets the first post in the thread
var op = document.getElementsByClassName('op')[0];
// Node list for every post info (The part where it says the time and shit in a post)
var posts = document.getElementsByClassName('postInfo');
// Checkbox created by the script
var checkbox;
// It's the "Download: " text you see before every checkbox generated by the script
var phrase;

// Creates text (Like "Download: ")
function create_text(text) {
    // Creates a HTML element (In this case, a <span> element)
	var name = document.createElement('SPAN');
    // Creates the text for the <span> element
    var name_text = document.createTextNode(text);
    
    // Inserts the text into the <span> element
    name.appendChild(name_text);
    
    // Returns the finished product
    return name;
}

// Creates checkboxes
function create_checkbox() {
    // Creates a HTML element (In this case, a <input> element)
	var name = document.createElement('INPUT');
    // Sets the type of the Input element to checkbox. Basically tells that bitch nigga to become a checkbox
    name.setAttribute('type', 'checkbox');
    name.setAttribute('class', 'script_checkbox');
    
    // Returns the finished product
    return name;
}

// Goes through every post and appends a checkbox to every post that has an image in it
for(var j = 0; j < posts.length; j++) {
    if(posts[j].parentNode.getElementsByClassName('file').length > 0) {
        // Creates a checkbox
    	checkbox = create_checkbox();
        // Creates the text
    	phrase = create_text(' Download: ');
        
        // Appends the "Download: " text to the post info of a post
    	posts[j].appendChild(phrase);
        // Appends the checkbox to the post info of a post
    	posts[j].appendChild(checkbox);
    }
}


// Creates buttons
function create_button(button_text, click_function) {
    // Creates a HTML element (In this case a <button> element)
    var name = document.createElement('BUTTON');
    // Creates the text for the button
    var name_text = document.createTextNode(button_text);
    
    // Adds the text to the button
    name.appendChild(name_text);
    
    // Makes buttons do something when they're clicked
    name.addEventListener('click', click_function, false);
    
    // Adds the button to OP's post
    op.appendChild(name);
}

// Fun-fact: send_data is correct and send_data() is wrong. Don't ask me why
create_button('Download images', send_data);
create_button('Download checked posts', send_data_post);



